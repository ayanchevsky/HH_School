import re


# Задача 1. Преобразования слов
# Условие задачи
#
# Ограничение времени, с	1
# Ограничение памяти, МБ	64
# Общее число попыток отправки	15
#
# На вход подается 2 подстроки. Нужно определить, можно ли превратить первую во вторую, заменяя одни буквы на другие,
# с учетом следующих правил:
#
# - участвуют только буквы русского алфавита а-я;
# - все буквы в нижнем регистре;
# - за один шаг нужно преобразовать все вхождения одной буквы в другую букву.
#
# Входные данные Входная информация поступает из стандартного ввода в виде одной строки. В этой строке содержатся две
# подстроки, разделенные пробелом. Ваше решение должно учитывать вариант, когда на вход поданы строки разной длины.
# Некорректные данные на вход не поступают, дополнительные проверки не требуются.
#
#
# Выходные данные В качестве ответа в стандартный вывод программа должна выводить 1 (если превратить можно) или 0 (
# если превратить нельзя).
#
#
# Пример 1
# Входные данные: привет прикол
# Выходные данные: 1
# Преобразования (выводить не нужно):
# в ⇒ к (прикет)
# е ⇒ о (прикот)
# т ⇒ л (прикол)
#
#
# Пример 2
# Входные данные: ааббдд ддббаа
# Выходные данные: 1
# Преобразования (выводить не нужно):
# д ⇒ я (ааббяя)
# а ⇒ д (ддббяя)
# я ⇒ а (ддббаа)
#
#
# Пример 3
# Входные данные: абаб ааах
# Выходные данные: 0
# Преобразовать нельзя, так как 'б' не сможет оказаться одновременно 'а' и 'х'.


def check(input_str):
    if (input_str is None) or (input_str == ''):
        return 0
    elif not re.fullmatch("^[а-яё]+\\s[а-яё]+$", input_str):
        return 0
    str_all = list(input_str.strip().split(' '))
    first = str_all[0]
    second = str_all[1]
    if len(first) != len(second):
        return 0
    elif first == second:
        return 1
    else:
        charDict = {}
        firstList = list(first)
        secondList = list(second)
        for i in range(len(firstList)):
            if charDict.get(firstList[i]):
                if secondList[i] != charDict.get(firstList[i]):
                    return 0
            else:
                charDict[firstList[i]] = secondList[i]
        charSet = set()
        for i in range(len(secondList)):
            if secondList[i] not in charSet:
                charSet.add(secondList[i])
        if len(charDict) == 33 and len(charSet) == 33:
            return 0
    return 1


input_str = input()
result = check(input_str)
print(result)
